/* Avoid accident click event caused by finger touch */
a,
area,
button,
[role="button"],
input,
label,
select,
summary,
textarea {
  -ms-touch-action: manipulation;
  touch-action: manipulation; }

/* =======================================================================
 *                       Form input Containers Classes
 * -----------------------------------------------------------------------
 * Description:    used to wrap the form input elements
 * -----------------------------------------------------------------------
 * Ussage:         see below
 *========================================================================
 */
form {
  width: 100%;
  padding: 15px;
  margin-bottom: 15px;
  background: #fff;
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-bottom: none; }
  form:last-child {
    margin-bottom: none;
    border-bottom: 4px solid rgba(0, 0, 0, 0.1); }

.form-group, .form-field {
  position: relative;
  margin-bottom: 15px;
  width: 100%; }

.form-field {
  border: 1px solid rgba(0, 0, 0, 0.15);
  border-left: none; }

/* =======================================================================
 *                           Form input Control
 * -----------------------------------------------------------------------
 * Description:    used to control the style of form input element,
 *                 normalize the font size, line-height, and assigne
 *                 a custom border color, also applied a transition
 *                 effect when focused
 *                  (a). can be used as a block level element, 100% width.
 *                  (b). can be used with a grid class, ex: col-1 to act
 *                       like a flex grid. (need to wrap by .row or similar
 *                       classes.
 * -----------------------------------------------------------------------
 * Ussage:      applied to Form input such as <input>, <textarea>, 
 *              <option>, <checkbox>, etc
 *========================================================================
 */
.form-input {
  display: block;
  position: relative;
  width: 100%;
  padding: 0.5rem 0.75rem;
  color: #495057;
  font-size: 1rem;
  line-height: 1.5rem;
  border: 1px solid rgba(0, 0, 0, 0.15);
  -webkit-transition: border-color ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.25s;
  transition: border-color ease-in-out 0.15s, -webkit-box-shadow ease-in-out 0.25s;
  -o-transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.25s;
  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.25s;
  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.25s, -webkit-box-shadow ease-in-out 0.25s; }
  .form-input:focus {
    border-color: #80bdff;
    -webkit-box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.05);
    box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.05);
    outline: none; }
  .form-input::-webkit-input-placeholder {
    color: rgba(0, 0, 0, 0.35); }
  .form-input:-ms-input-placeholder {
    color: rgba(0, 0, 0, 0.35); }
  .form-input::placeholder {
    color: rgba(0, 0, 0, 0.35); }

textarea {
  overflow: auto;
  resize: vertical; }

/* Select Box */
/* Note: Select element sits inside a .selectWrapper class, there is also a span element act as the caret;
   the .selectWrapper element and the .caret have a z-index of 1, the select element has z-index of 2;
   the select has a transparent background, so it won't cover the care beneath it
*/
/* =======================================================================
 *                          Select Element, <select>
 * -----------------------------------------------------------------------
 * Description:    the <select> element is displayed differently with
 *                 different browsers, so we try to normalize it by remove
 *                 the appearance property (to remove the browser default 
 *                 carret), and use a customized carret. So we create a
 *                 wrapper (.singleSelectoWrapper or .multiSelectWrapper)
 *                 to contain the <select> and .caret element.
 *
 *                 Since <select> has single or multiple options, so we 
 *                 create .singleSelectoWrapper and .multiSelectWrapper
 *                 respectively
 * -----------------------------------------------------------------------
 * Ussage:         see below
 *========================================================================
 */
select {
  display: block;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border-radius: 0;
  background: transparent !important;
  z-index: 2;
  /* make it top layer */ }
  select:hover {
    cursor: pointer; }

.singleSelectWrapper, .multiSelectWrapper {
  position: relative;
  overflow: auto;
  z-index: 1; }
  .singleSelectWrapper .caret, .multiSelectWrapper .caret {
    display: block;
    position: absolute;
    width: 3px;
    height: 3px;
    top: 50%;
    right: 1rem;
    border-top: 0.3rem solid #495057;
    border-right: 0.3rem solid transparent;
    border-left: 0.3rem solid transparent;
    z-index: 1; }
  .singleSelectWrapper .single-select, .multiSelectWrapper .single-select {
    padding-right: 3rem; }

.multiSelectWrapper .multi-select {
  max-height: 8rem; }
  .multiSelectWrapper .multi-select option {
    padding: 0.5rem 0;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1); }
    .multiSelectWrapper .multi-select option:first-child {
      margin-top: -0.5rem; }
    .multiSelectWrapper .multi-select option:last-child {
      margin-bottom: -0.5rem;
      border-bottom: none; }

/* Label & Legend */
.label-col,
.label-inline {
  display: inline-block;
  padding-top: calc(0.5rem + 1px);
  padding-right: 0.75rem;
  padding-bottom: calc(0.5rem + 1px);
  padding-left: 0;
  font-size: 1rem;
  line-height: 1.5rem; }

legend {
  padding: 0.5rem 1.5rem 0.5rem 0;
  /* margin-bottom: 15px; */ }

/* Disabled Input */
.disabled {
  color: #868e96;
  cursor: not-allowed; }

/* Buttons */
button {
  -webkit-appearance: none;
  -moz-appearance: none; }

button, .btn {
  padding: 0.5rem 0.75rem;
  font-size: 1rem;
  background-color: #fff;
  border: none;
  -webkit-box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.15);
  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.15);
  -webkit-transition: background-color ease-in-out 0.15s, border-color ease-in-out 0.15s;
  -o-transition: background-color ease-in-out 0.15s, border-color ease-in-out 0.15s;
  transition: background-color ease-in-out 0.15s, border-color ease-in-out 0.15s; }

button:hover,
button:focus,
button:active {
  outline: none;
  cursor: pointer; }

button:active {
  -webkit-box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.5);
  box-shadow: inset 1px 1px 3px rgba(0, 0, 0, 0.5);
  -webkit-transform: translate(1px, 1px);
  -ms-transform: translate(1px, 1px);
  transform: translate(1px, 1px); }

.btn-primary {
  color: #fff;
  background-color: #007bff;
  border: 1px solid #007bff; }

.btn-primary:hover,
.btn-primary:active {
  background-color: #0069d9;
  border-color: #0062cc; }

/* Form Checkbox */
.form-check {
  margin-right: 0.25rem; }

/* Custom Form Checkbox - FontAwsome - Style 1 */
.custom-form-check,
.custom-form-check-icon,
.custom-form-check-icon i,
.custom-form-check-content,
.custom-form-check-icon-checked,
.custom-form-check-icon-unchecked {
  display: inline-block;
  position: relative;
  line-height: 1.5rem;
  vertical-align: middle; }

.custom-form-check:hover {
  cursor: pointer; }

.custom-form-check-icon {
  margin-right: 0.25rem; }

.hidden-default-check {
  position: absolute;
  left: 0.75rem;
  pointer-events: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  opacity: 0;
  z-index: -1; }

.custom-form-check-icon-unchecked {
  top: -1px; }

.custom-form-check-icon-checked {
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0; }

.hidden-default-check:checked + span .custom-form-check-icon-unchecked {
  opacity: 0; }

.hidden-default-check:checked + span .custom-form-check-icon-checked {
  opacity: 1; }

.hidden-default-check:focus + span .custom-form-check-icon-unchecked {
  color: #007bff; }

.hidden-default-check:focus:checked + span .custom-form-check-icon-checked {
  color: #007bff; }

/* alternative style 1 */
.custom-form-check-alt {
  display: inline-block;
  position: relative;
  min-height: 1.5rem;
  line-height: 1.5rem; }

.custom-form-check-alt:hover {
  cursor: pointer; }

.custom-form-check-alt.disabled:hover {
  cursor: not-allowed; }

.custom-for-check-icon-alt {
  display: block;
  position: absolute;
  width: 1.1rem;
  height: 1.1rem;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  background: transparent;
  border-radius: 4px;
  border: 2px solid #000000; }

.custom-form-check-content-alt {
  display: inline-block;
  position: relative;
  min-height: 1.5rem;
  line-height: 1.5rem;
  margin-left: 1.5rem; }

.custom-for-check-icon-alt i {
  position: absolute;
  font-size: 0.6rem;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  opacity: 0;
  -webkit-transition: opacity ease-in 0.2s;
  -o-transition: opacity ease-in 0.2s;
  transition: opacity ease-in 0.2s; }

.custom-for-check-icon-alt::before {
  content: "";
  display: inline-block;
  position: absolute;
  width: 1.3rem;
  height: 1.3rem;
  top: 0;
  left: 0;
  opacity: 0;
  -webkit-transform: translate(calc(-0.1rem - 2px), calc(-0.1rem - 2px));
  -ms-transform: translate(calc(-0.1rem - 2px), calc(-0.1rem - 2px));
  transform: translate(calc(-0.1rem - 2px), calc(-0.1rem - 2px));
  border-radius: 4px;
  border: 2px solid #007bff;
  -webkit-box-shadow: 0 0 5px #007bff;
  box-shadow: 0 0 5px #007bff;
  -webkit-transition: opacity ease-in 0.2s, -webkit-box-shadow ease-in 0.2s;
  transition: opacity ease-in 0.2s, -webkit-box-shadow ease-in 0.2s;
  -o-transition: opacity ease-in 0.2s, box-shadow ease-in 0.2s;
  transition: opacity ease-in 0.2s, box-shadow ease-in 0.2s;
  transition: opacity ease-in 0.2s, box-shadow ease-in 0.2s, -webkit-box-shadow ease-in 0.2s; }

/* Background Border Highlight */
/* when focus */
.hidden-default-check:focus + .custom-for-check-icon-alt::before {
  opacity: 1; }

/* when focus and checked */
.hidden-default-check:focus:checked + .custom-for-check-icon-alt::before {
  opacity: 1; }

/* Toggle Checkmark */
/* when checked */
.hidden-default-check:checked + .custom-for-check-icon-alt i {
  opacity: 1; }

/* alternative style 2 */
.custom-form-check-alt-2 {
  display: inline-block;
  position: relative;
  min-height: 1.5rem;
  line-height: 1.5rem; }

.custom-form-check-alt-2:hover {
  cursor: pointer; }

.custom-form-check-alt-2.disabled:hover {
  cursor: not-allowed; }

.custom-for-check-icon-alt-2 {
  display: block;
  position: absolute;
  width: 1.1rem;
  height: 1.1rem;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  background: transparent;
  border-radius: 4px;
  border: 2px solid #000000;
  -webkit-transition: background-color ease-in 0.2s;
  -o-transition: background-color ease-in 0.2s;
  transition: background-color ease-in 0.2s; }

.custom-form-check-content-alt-2 {
  display: inline-block;
  position: relative;
  min-height: 1.5rem;
  line-height: 1.5rem;
  margin-left: 1.5rem; }

.custom-for-check-icon-alt-2 i {
  position: absolute;
  font-size: 0.6rem;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  opacity: 0;
  -webkit-transition: opacity ease-in 0.2s;
  -o-transition: opacity ease-in 0.2s;
  transition: opacity ease-in 0.2s; }

/* Background Border Highlight */
/* when focus */
.hidden-default-check:focus + .custom-for-check-icon-alt-2 {
  background: #000000; }

/* when focus and checked */
.hidden-default-check:focus:checked + .custom-for-check-icon-alt-2 i {
  color: #fff; }

/* when focus and checked */
.hidden-default-check:focus:active + .custom-for-check-icon-alt-2 i {
  background: #000000; }

/* Toggle Checkmark */
/* when checked */
.hidden-default-check:checked + .custom-for-check-icon-alt-2 i {
  opacity: 1; }


