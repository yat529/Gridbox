// dropdown list stylings
.dropdown-list {
    position: absolute;
    margin: 0;
    padding: 0;
    width: 100%;
    list-style-type: none;
    box-shadow: 0 2px 10px -5px rgba(0, 0, 0, 0.2);

    &.hide {
        display: none;
    }
    
    li {
        padding: 1rem 1.5rem;
        border-bottom: 1px solid darken($gray, 5%);
        text-align: center;
        cursor: pointer;

        &:hover {
            background: $white;
        }
    }
}


// Dropdown global style
.dropdown {
    display: inline-block;
    position: relative;
    vertical-align: top; // fix inline align issue

    .btn {
        padding: 1rem 1.5rem;
    }
}


// Dropdown with seperate button specific styling
.dropdown-seperate {
    // note; use the float positioning to remove the inline element carriage return whitespaces
    .btn-wrap {
        position: relative;
        overflow: hidden;
        .btn {
            float: left;
        }
    }
    // make the buttons inline
    a,
    button {
        display: inline-block;
    }
    // tweak the button style
    .with-carret {
        padding: 1rem !important;
    }
}

// Dropdown indicator styling
// Four styles: carret, carret-circle, arrow, arrow-circle
// apply to the element has .with-carret class
.dropdown {
    %indicator {
        content: " ";
        position: absolute;
        top: 50%;
        right: 0.75rem;
        transform: translate(-80%, -50%) rotate(45deg);
        transition: all 0.3s;
    }

    %indicator-bg {
        content: "";
        position: absolute;
        top: 50%;
        right: 0.75rem;
        width: 13px;
        height: 13px;
        border-radius: 50%;
        border: 1px solid $white;
        // background: $white;
        transform: translateY(-50%);
    }

    // .with-carret indicator the element that carries the indicator element
    .with-carret {
        position: relative;
        padding-right: 2.5rem; // leave 1rem for carret

        &.arrow,
        &.arrow-circle {
            &::after {
                @extend %indicator;
                width: 5px;
                height: 5px;
                border-top: 2px solid $white;
                border-right: 2px solid $white;
                transform: translate(-100%, -50%) rotate(45deg);
            }
        }

        &.carret,
        &.carret-circle {
            &::after {
                @extend %indicator;
                border: 3px solid transparent;
                border-top: 3px solid $white;
                border-right: 3px solid $white;
            }
        }

        &.arrow-circle,
        &.carret-circle {
            &::before {
                @extend %indicator-bg;
            }
        }

        &.carret-circle.active {
            &::after {
                transform: translate(-58%, -75%) rotate(135deg);
            }
        }

        &.arrow-circle.active {
            &::after {
                transform: translate(-78%, -65%) rotate(135deg);
            }
        }
    }
}

// Dropdown list positions
// Dropup
.dropup {
    .dropdown-list {
        bottom: 100%;
    }

    .with-carret {
        &.carret-circle.active {
            &::after {
                transform: translate(-58%, -30%) rotate(-45deg) !important;
            }
        }

        &.arrow-circle.active {
            &::after {
                transform: translate(-78%, -35%) rotate(-45deg) !important;
            }
        }
    }
}

// Dropright
.dropright {
    .dropdown-list {
        top: 0;
        left: 100%;
    }

    .with-carret {
        &.arrow-circle.active,
        &.carret-circle.active {
            &::after {
                transform: translate(-40%, -50%) rotate(45deg) !important;
            }
        }
    }
}

// Dropleft
.dropleft {
    .dropdown-list {
        top: 0;
        right: 100%;
    }

    .with-carret {
        // default state
        &.arrow-circle {
            &::after {
                transform: translate(-60%, -50%) rotate(-135deg) !important;
            }
        }
        &.carret-circle {
            &::after {
                transform: translate(-30%, -50%) rotate(-135deg) !important;
            }
        }

        // active state
        &.arrow-circle.active {
            &::after {
                transform: translate(-120%, -50%) rotate(-135deg) !important;
            }
        }
        &.carret-circle.active {
            &::after {
                transform: translate(-80%, -50%) rotate(-135deg) !important;
            }
        }
    }
}